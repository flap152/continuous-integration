name: Run Tests

on:
  push:
    branches:
      - main
      - dev*

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      DB_CONNECTION: sqlite
#      DB_DATABASE: ":memory:"
      DB_DATABASE: database
      APP_KEY: "base64:GC/9TmNKSDyHPi65pZdJf92eoIa0pRWQAkCnJ+MKYHo="
      APP_ENV: local
    services:
      redis:
        image: redis:7.4
        ports:
          - 6379:6379
#      mysql:
#        image: mysql:8.0
#        ports:
#          - 3306:3306
        env:
          MYSQL_DATABASE: laravel
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
#          DB_CONNECTION: sqlite
#          DB_DATABASE: databse
#          DB_DATABASE: ":memory:"
#          APP_KEY: "base64:GC/9TmNKSDyHPi65pZdJf92eoIa0pRWQAkCnJ+MKYHo="

    steps:
      - name: Checkout Code - from git
        uses: actions/checkout@v4.1.7
        if: ${{ ! github.event.act }}
        with:
          ref: ${{ github.head_ref }}

      - name: Checkout Code - local act - local code copy
        uses: actions/checkout@v4
        if: ${{ github.event.act }}

      - name: Setup tooling
        if: true == true
        uses: ./.github/actions/setup
        with:
          php-version: '8.2'
          php-tools: composer:v2
          php-extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, redis, igbinary, msgpack, lzf, zstd, lz4, memcached, gmp, :php-psr

      - name: Setup PHP and Composer
        if: false == true
        uses: shivammathur/setup-php@2.31.1
        with:
          php-version: '8.2'
          tools: composer:v2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, redis, igbinary, msgpack, lzf, zstd, lz4, memcached, gmp, :php-psr
#          php-extensions: 'json, dom, curl, libxml, mbstring'
#          nova-email: ${{ secrets.NOVA_EMAIL }}
#          nova-password: ${{ secrets.NOVA_PASSWORD }}

#      - name: Make .sqlite
#        run: touch ./database/database.sqlite

#      - name: Copy Environment File
#      - name: Copy source .env.something (which one?) into .env (create?)
#        run: cp .env.example .env
#        run: cp .env.bak .env
#      - run: cp .env.localci .env

      - name: Install Project Dependencies
#        run: composer install
        run: composer install -q --no-interaction --no-progress --no-scripts

        #        run: cp .env.example .env
#      - name: Copy Environment File
#        run: |
#          cp .env.bk2 .env
#          php artisan key:generate

      - name: Echo Environment File
        run: |
          php -v
#          cat .env | sort || echo .env ne existe pas
      #          ls .env || cp .env.bk2 .env

#          ls .env || cp .env.example .env

#      - name: Generate Application Key
#        run: php artisan key:generate

      - name: migrate DB
        run: |
          php -r "file_exists('database/database.sqlite') || touch('database/database.sqlite');"
          chmod 664 database/database.sqlite
          php artisan migrate --graceful --ansi --force --env=bk2

      - name: App info - local
        run: |
          echo "about local env"
          php artisan about
          env | sort

      - name: App info - Testing
        run: |
          echo "about testing env"
          php artisan --env=testing about
          env | sort

      - name: Run Tests
        continue-on-error: true
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
#          DB_DATABASE: database
          APP_KEY: "base64:GC/9TmNKSDyHPi65pZdJf92eoIa0pRWQAkCnJ+MKYHo="
        run: |
          php artisan test --env=bk2 --compact || echo contineur
          #php artisan test --env=example --compact || echo contineur
          #php artisan test --env=localci --compact  || echo contineur
#        shell: bash

        #        run: php artisan test --compact --coverage --min=75
